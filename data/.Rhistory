<<<<<<< HEAD
library(tidyverse)
title_url <- "https://datasets.imdbws.com/title.basics.tsv.gz"
title_basics_raw <- read_tsv(title_url, na = c("\\N", ""))
rating_url <- "https://datasets.imdbws.com/title.ratings.tsv.gz"
ratings_raw <- read_tsv(rating_url, na = c("\\N", ""))
View(ratings_raw)
View(title_basics_raw)
View(title_basics_raw)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# load raw data
source("download-data.R")
# load raw data
source("download-data.R")
filtered_movies_TVepisodes <- title_basics_raw %>% filter(titleType %in% c("movie", "tvepisode"))
merged_data <- filtered_movies_TVepisodes %>% left_join(ratings_raw, by = "tconst")
merged_data <- merged_data %>% mutate(is_tvepisode = ifelse(titleType == "tvepisode", 1, 0))
View(merged_data)
library(data.table)
data_table <- as.data.table(merged_data)
data_table[, c("originalTitle", "isAdult", "endYear", "genres", "numVotes") := NULL]
View(data_table)
=======
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
title_url <- "https://datasets.imdbws.com/title.basics.tsv.gz"
rating_url <- "https://datasets.imdbws.com/title.ratings.tsv.gz"
title_basics_raw <- read_tsv(title_url, na = c("\\N", ""), show_col_types = FALSE)
ratings_raw <- read_tsv(rating_url, na = c("\\N", ""), show_col_types = FALSE)
```
filtered_movies_TVepisodes <- title_basics_raw %>%
filter(titleType %in% c("movie", "tvEpisode"))
merged_data <- filtered_movies_TVepisodes %>%
left_join(ratings_raw, by = "tconst")
merged_data <- filtered_movies_TVepisodes %>%
left_join(ratings_raw, by = "tconst")
cat("Number of unmatched rows:", nrow(filtered_movies_TVepisodes)-nrow(merged_data), "\n")
merged_data <- merged_data %>%
mutate(is_tvepisode = ifelse(titleType == "tvEpisode", 1,0))
library(data.table)
data_table <- as.data.table(merged_data)
View(merged_data)
View(data_table)
data_table[, c("originalTitle", "isAdult", "endYear", "genres", "numVotes") := NULL]
%>% drop_na(runtimeMinutes, averageRating, startYear) %>% distinct(tconst, .keep_all = TRUE)
data_table[, c("originalTitle", "isAdult", "endYear", "genres", "numVotes") := NULL] %>% drop_na(runtimeMinutes, averageRating, startYear) %>% distinct(tconst, .keep_all = TRUE)
library(data.table)
data_table <- as.data.table(merged_data)
data_table[, c("originalTitle", "isAdult", "endYear", "genres", "numVotes") := NULL] %>% drop_na(runtimeMinutes, averageRating, startYear) %>% distinct(tconst, .keep_all = TRUE)
library(data.table)
analysis_data <- as.data.table(merged_data)
analysis_data[, c("originalTitle", "isAdult", "endYear", "genres", "numVotes") := NULL]
analysis_data[, c("originalTitle", "isAdult", "endYear", "genres", "numVotes") := NULL]
View(analysis_data)
View(analysis_data)
analysis_data[, c("originalTitle", "titleType", "isAdult", "endYear", "genres", "numVotes") := NULL]
analysis_data[, c("originalTitle", "titleType", "isAdult", "endYear", "genres", "numVotes") := NULL] %>% drop_na(runtimeMinutes, averageRating, startYear)
analysis_data[, c("originalTitle", "titleType", "isAdult", "endYear", "genres", "numVotes") := NULL] %>% drop_na(runtimeMinutes, averageRating, startYear) %>% distinct(tconst, .keep_all = TRUE)
drop_na(runtimeMinutes, averageRating, startYear) %>% distinct(tconst, .keep_all = TRUE)
drop_na("runtimeMinutes", "averageRating", "startYear") %>% distinct(tconst, .keep_all = TRUE)
analysis_data %>% drop_na("runtimeMinutes", "averageRating", "startYear") %>% distinct(tconst, .keep_all = TRUE)
analysis_data %>% drop_na(runtimeMinutes, averageRating, startYear) %>% distinct(tconst, .keep_all = TRUE)
analysis_data %>% drop_na(runtimeMinutes, averageRating, startYear)
View(analysis_data)
analysis_data[, c("originalTitle", "titleType", "isAdult", "endYear", "genres", "numVotes") := NULL] %>% analysis_data %>% drop_na(runtimeMinutes, averageRating, startYear)
analysis_data <- analysis_data[, c("originalTitle", "titleType", "isAdult", "endYear", "genres", "numVotes") := NULL] %>% analysis_data %>% drop_na(runtimeMinutes, averageRating, startYear)
analysis_data <- analysis_data[!is.na(runtimeMinutes) &
!is.na(averageRating) &
!is.na(startYear)]
analysis_data <- analysis_data[!is.na(runtimeMinutes) & !is.na(averageRating)& !is.na(startYear)] %>% distinct(tconst, .keep_all = TRUE)
>>>>>>> main
