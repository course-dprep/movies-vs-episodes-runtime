packages <- c("reshape2", "rmarkdown",
"data.table", "Hmisc", "dplr",
"stargazer", "knitr",
"xtable","tidyverse",
"RSQLite", "dbplyr")
install.packages(packages)
q()
filtered_movies <- wide_releases
wide_releases <- filtered_movies
filtered_movies <- widereleases
filtered_movies <- "widereleases"
filtered_movies[,comedy_genre:= ifelse(str_detect(imdb.com_genres,"Comedy"), 1, 0)]
setwd("~/dprep/Team Assignment/Deliverable1/team-project-team3")
knitr::opts_chunk$set(echo = TRUE)
title_url <- "https://datasets.imdbws.com/title.basics.tsv.gz"
rating_url <- "https://datasets.imdbws.com/title.ratings.tsv.gz"
title_basics_raw <- read_tsv(title_url, na = c("\\N", ""), show_col_types = FALSE)
library(tidyverse)
title_url <- "https://datasets.imdbws.com/title.basics.tsv.gz"
rating_url <- "https://datasets.imdbws.com/title.ratings.tsv.gz"
title_basics_raw <- read_tsv(title_url, na = c("\\N", ""), show_col_types = FALSE)
ratings_raw <- read_tsv(rating_url, na = c("\\N", ""), show_col_types = FALSE)
filtered_movies_TVepisodes <- title_basics_raw %>%
filter(titleType %in% c("movie", "tvEpisode"))
merged_data <- filtered_movies_TVepisodes %>%
left_join(ratings_raw, by = "tconst")
cat("Number of unmatched rows:", nrow(filtered_movies_TVepisodes)-nrow(merged_data), "\n")
View(merged_data)
merged_data <- merged_data %>%
mutate(is_tvepisode = ifelse(titleType == "tvEpisode", 1,0))
analysis_data <- merged_data %>%
select(tconst, primaryTitle, averageRating, runtimeMinutes, startYear, is_tvepisode) %>%
drop_na(runtimeMinutes, averageRating, startYear) %>%
distinct(tconst, .keep_all = TRUE) %>%
{ if ("tconst" %in% names(.) && n_distinct(.$tconst) == nrow(.)) select(., -tconst) else . }
View(analysis_data)
